============================= test session starts ==============================
collecting ... collected 11 items

main.py::test_create_pet PASSED                                          [  9%]
main.py::test_update_pet PASSED                                          [ 18%]
main.py::test_get_pet_by_id PASSED                                       [ 27%]
main.py::test_find_pet_by_status PASSED                                  [ 36%]
main.py::test_find_pet_by_tags PASSED                                    [ 45%]
main.py::test_upload_pet_image FAILED                                    [ 54%]
main.py:49 (test_upload_pet_image)
415 != (200, 400, 404)

Expected :(200, 400, 404)
Actual   :415
<Click to see difference>

new_pet = {'id': 123456789, 'name': 'TestPet', 'photoUrls': ['http://example.com/photo.jpg'], 'status': 'available'}

    def test_upload_pet_image(new_pet):
        files = {"file": ("filename.jpg", b"dummy_content")}
        response = requests.post(f"{BASE_URL}/pet/{new_pet['id']}/uploadImage", files=files)
        coverage.record_test_result("POST /pet/{petId}/uploadImage", response.status_code)
>       assert response.status_code in (200, 400, 404)
E       assert 415 in (200, 400, 404)
E        +  where 415 = <Response [415]>.status_code

main.py:54: AssertionError

main.py::test_delete_pet PASSED                                          [ 63%]
main.py::test_get_nonexistent_pet FAILED                                 [ 72%]
main.py:62 (test_get_nonexistent_pet)
200 != 404

Expected :404
Actual   :200
<Click to see difference>

def test_get_nonexistent_pet():
        response = requests.get(f"{BASE_URL}/pet/0")
        coverage.record_test_result("GET /pet/{petId}", response.status_code)
>       assert response.status_code == 404
E       assert 200 == 404
E        +  where 200 = <Response [200]>.status_code

main.py:66: AssertionError

main.py::test_create_pet_invalid_data PASSED                             [ 81%]
main.py::test_update_pet_invalid_id PASSED                               [ 90%]
main.py::test_print_coverage PASSED                                      [100%]
==================================================
               API COVERAGE REPORT
==================================================

1. Среднее покрытие эндпоинтов раздела Pet: 41.7%
2. Покрытие статус-кодов раздела Pet: 42.9%
3. Полностью покрытые эндпоинты API: 0.0%
4. Общее покрытие статус-кодов API: 20.0%

Детали по endpoint'ам:
PUT /pet: 2/4 (50.0%) ------> ['200', '400'] / ['200', '400', '404', '422']
POST /pet: 2/3 (66.7%) ------> ['200', '500'] / ['200', '400', '422']
GET /pet/findByStatus: 1/2 (50.0%) ------> ['200'] / ['200', '400']
GET /pet/findByTags: 1/2 (50.0%) ------> ['200'] / ['200', '400']
GET /pet/{petId}: 1/3 (33.3%) ------> ['200'] / ['200', '400', '404']
POST /pet/{petId}: 0/2 (0.0%) ------> [] / ['200', '400']
DELETE /pet/{petId}: 1/2 (50.0%) ------> ['200'] / ['200', '400']
POST /pet/{petId}/uploadImage: 1/3 (33.3%) ------> ['415'] / ['200', '400', '404']
GET /store/inventory: 0/1 (0.0%) ------> [] / ['200']
POST /store/order: 0/3 (0.0%) ------> [] / ['200', '400', '422']
GET /store/order/{orderId}: 0/3 (0.0%) ------> [] / ['200', '400', '404']
DELETE /store/order/{orderId}: 0/3 (0.0%) ------> [] / ['200', '400', '404']
POST /user: 0/1 (0.0%) ------> [] / ['200']
POST /user/createWithList: 0/1 (0.0%) ------> [] / ['200']
GET /user/login: 0/2 (0.0%) ------> [] / ['200', '400']
GET /user/logout: 0/1 (0.0%) ------> [] / ['200']
GET /user/{username}: 0/3 (0.0%) ------> [] / ['200', '400', '404']
PUT /user/{username}: 0/3 (0.0%) ------> [] / ['200', '400', '404']
DELETE /user/{username}: 0/3 (0.0%) ------> [] / ['200', '400', '404']

=========================

==================================================
                API COVERAGE REPORT                 
==================================================

1. Среднее покрытие эндпоинтов раздела Pet: 41.7%
2. Покрытие статус-кодов раздела Pet: 42.9%
3. Полностью покрытые эндпоинты API: 0.0%
4. Общее покрытие статус-кодов API: 20.0%

Детали по endpoint'ам:
DELETE /pet/{petId}: 1/2 (50.0%) ------> ['200'] / ['200', '400']
DELETE /store/order/{orderId}: 0/3 (0.0%) ------> [] / ['200', '400', '404']
DELETE /user/{username}: 0/3 (0.0%) ------> [] / ['200', '400', '404']
GET /pet/findByStatus: 1/2 (50.0%) ------> ['200'] / ['200', '400']
GET /pet/findByTags: 1/2 (50.0%) ------> ['200'] / ['200', '400']
GET /pet/{petId}: 1/3 (33.3%) ------> ['200'] / ['200', '400', '404']
GET /store/inventory: 0/1 (0.0%) ------> [] / ['200']
GET /store/order/{orderId}: 0/3 (0.0%) ------> [] / ['200', '400', '404']
GET /user/login: 0/2 (0.0%) ------> [] / ['200', '400']
GET /user/logout: 0/1 (0.0%) ------> [] / ['200']
GET /user/{username}: 0/3 (0.0%) ------> [] / ['200', '400', '404']
POST /pet: 2/3 (66.7%) ------> ['200', '500'] / ['200', '400', '422']
POST /pet/{petId}: 0/2 (0.0%) ------> [] / ['200', '400']
POST /pet/{petId}/uploadImage: 1/3 (33.3%) ------> ['415'] / ['200', '400', '404']
POST /store/order: 0/3 (0.0%) ------> [] / ['200', '400', '422']
POST /user: 0/1 (0.0%) ------> [] / ['200']
POST /user/createWithList: 0/1 (0.0%) ------> [] / ['200']
PUT /pet: 2/4 (50.0%) ------> ['200', '400'] / ['200', '400', '404', '422']
PUT /user/{username}: 0/3 (0.0%) ------> [] / ['200', '400', '404']

=========================


========================= 2 failed, 9 passed in 14.20s =========================

Process finished with exit code 1
