============================= test session starts ==============================
collecting ... collected 10 items

main.py::test_add_pet PASSED                                             [ 10%]
main.py::test_update_pet PASSED                                          [ 20%]
main.py::test_find_pet_by_status PASSED                                  [ 30%]
main.py::test_find_pet_by_tags PASSED                                    [ 40%]
main.py::test_get_pet_by_id PASSED                                       [ 50%]
main.py::test_update_pet_with_form_data PASSED                           [ 60%]
main.py::test_delete_pet PASSED                                          [ 70%]
main.py::test_upload_image PASSED                                        [ 80%]
main.py::test_pet_crud_workflow FAILED                                   [ 90%]
main.py:204 (test_pet_crud_workflow)
404 != 200

Expected :200
Actual   :404
<Click to see difference>

def test_pet_crud_workflow():
        """End-to-end тест CRUD операций для питомца"""
        # Удаляем питомца если он уже существует
        requests.delete(f"{BASE_URL}/pet/{TEST_PET['id']}")
    
        # 1. Create
        create_response = requests.post(f"{BASE_URL}/pet", json=TEST_PET)
        coverage.record_test_result("POST /pet", create_response.status_code)
        assert create_response.status_code == 200
    
        # 2. Read
        read_response = requests.get(f"{BASE_URL}/pet/{TEST_PET['id']}")
        coverage.record_test_result("GET /pet/{petId}", read_response.status_code)
        assert read_response.status_code in [200, 404]  # Может возвращать 404
    
        if read_response.status_code == 200:
            # 3. Update
            updated_pet = {**TEST_PET, "name": "updated_in_crud"}
            update_response = requests.put(f"{BASE_URL}/pet", json=updated_pet)
            coverage.record_test_result("PUT /pet", update_response.status_code)
>           assert update_response.status_code == 200
E           assert 404 == 200
E            +  where 404 = <Response [404]>.status_code

main.py:225: AssertionError

main.py::test_report_coverage PASSED                                     [100%]
==================================================
               API COVERAGE REPORT                
==================================================

1. Среднее покрытие эндпоинтов раздела Pet: 71.9%
2. Покрытие статус-кодов раздела Pet: 71.4%
3. Полностью покрытые эндпоинты API: 15.8%
4. Общее покрытие статус-кодов API: 33.3%

Детали по endpoint'ам:
PUT /pet: 3/4 (75.0%) ------> ['200', '404', '400'] / ['200', '400', '404', '422']
POST /pet: 2/3 (66.7%) ------> ['200', '400'] / ['200', '400', '422']
GET /pet/findByStatus: 2/2 (100.0%) ------> ['200', '400'] / ['200', '400']
GET /pet/findByTags: 1/2 (50.0%) ------> ['200'] / ['200', '400']
GET /pet/{petId}: 3/3 (100.0%) ------> ['200', '404', '400'] / ['200', '400', '404']
POST /pet/{petId}: 1/2 (50.0%) ------> ['400'] / ['200', '400']
DELETE /pet/{petId}: 2/2 (100.0%) ------> ['200', '400'] / ['200', '400']
POST /pet/{petId}/uploadImage: 1/3 (33.3%) ------> ['415'] / ['200', '400', '404']
GET /store/inventory: 0/1 (0.0%) ------> [] / ['200']
POST /store/order: 0/3 (0.0%) ------> [] / ['200', '400', '422']
GET /store/order/{orderId}: 0/3 (0.0%) ------> [] / ['200', '400', '404']
DELETE /store/order/{orderId}: 0/3 (0.0%) ------> [] / ['200', '400', '404']
POST /user: 0/1 (0.0%) ------> [] / ['200']
POST /user/createWithList: 0/1 (0.0%) ------> [] / ['200']
GET /user/login: 0/2 (0.0%) ------> [] / ['200', '400']
GET /user/logout: 0/1 (0.0%) ------> [] / ['200']
GET /user/{username}: 0/3 (0.0%) ------> [] / ['200', '400', '404']
PUT /user/{username}: 0/3 (0.0%) ------> [] / ['200', '400', '404']
DELETE /user/{username}: 0/3 (0.0%) ------> [] / ['200', '400', '404']

==================================================
                API COVERAGE REPORT                 
==================================================

1. Среднее покрытие эндпоинтов раздела Pet: 71.9%
2. Покрытие статус-кодов раздела Pet: 71.4%
3. Полностью покрытые эндпоинты API: 15.8%
4. Общее покрытие статус-кодов API: 33.3%

Детали по endpoint'ам:
DELETE /pet/{petId}: 2/2 (100.0%) ------> ['200', '400'] / ['200', '400']
DELETE /store/order/{orderId}: 0/3 (0.0%) ------> [] / ['200', '400', '404']
DELETE /user/{username}: 0/3 (0.0%) ------> [] / ['200', '400', '404']
GET /pet/findByStatus: 2/2 (100.0%) ------> ['200', '400'] / ['200', '400']
GET /pet/findByTags: 1/2 (50.0%) ------> ['200'] / ['200', '400']
GET /pet/{petId}: 3/3 (100.0%) ------> ['200', '400', '404'] / ['200', '400', '404']
GET /store/inventory: 0/1 (0.0%) ------> [] / ['200']
GET /store/order/{orderId}: 0/3 (0.0%) ------> [] / ['200', '400', '404']
GET /user/login: 0/2 (0.0%) ------> [] / ['200', '400']
GET /user/logout: 0/1 (0.0%) ------> [] / ['200']
GET /user/{username}: 0/3 (0.0%) ------> [] / ['200', '400', '404']
POST /pet: 2/3 (66.7%) ------> ['200', '400'] / ['200', '400', '422']
POST /pet/{petId}: 1/2 (50.0%) ------> ['400'] / ['200', '400']
POST /pet/{petId}/uploadImage: 1/3 (33.3%) ------> ['415'] / ['200', '400', '404']
POST /store/order: 0/3 (0.0%) ------> [] / ['200', '400', '422']
POST /user: 0/1 (0.0%) ------> [] / ['200']
POST /user/createWithList: 0/1 (0.0%) ------> [] / ['200']
PUT /pet: 3/4 (75.0%) ------> ['200', '400', '404'] / ['200', '400', '404', '422']
PUT /user/{username}: 0/3 (0.0%) ------> [] / ['200', '400', '404']

=========================


========================= 1 failed, 9 passed in 40.95s =========================

Process finished with exit code 1
